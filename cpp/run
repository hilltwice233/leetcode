function dim() { echo "\033[90m$1\033[0m"; }
function red() { echo "\033[91m$1\033[0m"; }
function yellow() { echo "\033[93m$1\033[0m"; }
function cyan() { echo "\033[96m$1\033[0m"; }

source_code_ext=cc

# Get file name from the prefix number.
function get_file_name() {
  names=($(ls $1.*.$source_code_ext))
  echo ${names[0]}
}

# It will try clang, then if clang not found, it will try gcc.
# msvc is not supported by current script yet.
#
# Attention its parameters:
# 1. the first parameter is the input source file,
# 2. the second parameter is the output target file.
# 3. the following parameters are the other included path.
function compile() {
  src=$1
  out=$2
  shift
  shift

  clang_version=$(clang++ --version)
  if [ $? = 0 ]; then
    echo "$(cyan "compile using clang++:")\n$(dim "$clang_version")"
    echo "$@"
    return $(clang++ --std=c++17 $src -o $out "$@")
  else
    gcc_version=$(g++ --version)
    if [ $? = 0 ]; then
      echo $(yellow "clang++ not found, which is recommended.")
      echo "$(cyan "compile using g++:")\n$(dim "$gcc_version")"
      return $(g++ --std=c++17 $src -o $out "$@")
    else
      echo $(yellow "cannot find clang++ or g++ compiler")
      return 1
    fi
  fi
}

source_file=$(get_file_name $1)
target_file="$(sed 's/\.[^.]*$//' <<<$source_file).exe"
compile $source_file $target_file ./shared/*.cc
echo
if [ $? = 0 ]; then ./$target_file; else echo $(red "compilation failed"); fi
echo
